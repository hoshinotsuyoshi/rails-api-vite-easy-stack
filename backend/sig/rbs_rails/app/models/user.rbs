class User < ::ApplicationRecord
  extend ::_ActiveRecord_Relation_ClassMethods[::User, ::User::ActiveRecord_Relation, ::String]

  module GeneratedAttributeMethods
    def id: () -> ::String

    def id=: (::String) -> ::String

    def id?: () -> bool

    def id_changed?: () -> bool

    def id_change: () -> [ ::String?, ::String? ]

    def id_will_change!: () -> void

    def id_was: () -> ::String?

    def id_previously_changed?: () -> bool

    def id_previous_change: () -> ::Array[::String?]?

    def id_previously_was: () -> ::String?

    def id_before_last_save: () -> ::String?

    def id_change_to_be_saved: () -> ::Array[::String?]?

    def id_in_database: () -> ::String?

    def saved_change_to_id: () -> ::Array[::String?]?

    def saved_change_to_id?: () -> bool

    def will_save_change_to_id?: () -> bool

    def restore_id!: () -> void

    def clear_id_change: () -> void

    def email_address: () -> ::String

    def email_address=: (::String) -> ::String

    def email_address?: () -> bool

    def email_address_changed?: () -> bool

    def email_address_change: () -> [ ::String?, ::String? ]

    def email_address_will_change!: () -> void

    def email_address_was: () -> ::String?

    def email_address_previously_changed?: () -> bool

    def email_address_previous_change: () -> ::Array[::String?]?

    def email_address_previously_was: () -> ::String?

    def email_address_before_last_save: () -> ::String?

    def email_address_change_to_be_saved: () -> ::Array[::String?]?

    def email_address_in_database: () -> ::String?

    def saved_change_to_email_address: () -> ::Array[::String?]?

    def saved_change_to_email_address?: () -> bool

    def will_save_change_to_email_address?: () -> bool

    def restore_email_address!: () -> void

    def clear_email_address_change: () -> void

    def password_digest: () -> ::String

    def password_digest=: (::String) -> ::String

    def password_digest?: () -> bool

    def password_digest_changed?: () -> bool

    def password_digest_change: () -> [ ::String?, ::String? ]

    def password_digest_will_change!: () -> void

    def password_digest_was: () -> ::String?

    def password_digest_previously_changed?: () -> bool

    def password_digest_previous_change: () -> ::Array[::String?]?

    def password_digest_previously_was: () -> ::String?

    def password_digest_before_last_save: () -> ::String?

    def password_digest_change_to_be_saved: () -> ::Array[::String?]?

    def password_digest_in_database: () -> ::String?

    def saved_change_to_password_digest: () -> ::Array[::String?]?

    def saved_change_to_password_digest?: () -> bool

    def will_save_change_to_password_digest?: () -> bool

    def restore_password_digest!: () -> void

    def clear_password_digest_change: () -> void

    def onboarding_status: () -> ::String

    def onboarding_status=: (::String) -> ::String

    def onboarding_status?: () -> bool

    def onboarding_status_changed?: () -> bool

    def onboarding_status_change: () -> [ ::String?, ::String? ]

    def onboarding_status_will_change!: () -> void

    def onboarding_status_was: () -> ::String?

    def onboarding_status_previously_changed?: () -> bool

    def onboarding_status_previous_change: () -> ::Array[::String?]?

    def onboarding_status_previously_was: () -> ::String?

    def onboarding_status_before_last_save: () -> ::String?

    def onboarding_status_change_to_be_saved: () -> ::Array[::String?]?

    def onboarding_status_in_database: () -> ::String?

    def saved_change_to_onboarding_status: () -> ::Array[::String?]?

    def saved_change_to_onboarding_status?: () -> bool

    def will_save_change_to_onboarding_status?: () -> bool

    def restore_onboarding_status!: () -> void

    def clear_onboarding_status_change: () -> void

    def created_at: () -> ::ActiveSupport::TimeWithZone

    def created_at=: (::ActiveSupport::TimeWithZone) -> ::ActiveSupport::TimeWithZone

    def created_at?: () -> bool

    def created_at_changed?: () -> bool

    def created_at_change: () -> [ ::ActiveSupport::TimeWithZone?, ::ActiveSupport::TimeWithZone? ]

    def created_at_will_change!: () -> void

    def created_at_was: () -> ::ActiveSupport::TimeWithZone?

    def created_at_previously_changed?: () -> bool

    def created_at_previous_change: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def created_at_previously_was: () -> ::ActiveSupport::TimeWithZone?

    def created_at_before_last_save: () -> ::ActiveSupport::TimeWithZone?

    def created_at_change_to_be_saved: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def created_at_in_database: () -> ::ActiveSupport::TimeWithZone?

    def saved_change_to_created_at: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def saved_change_to_created_at?: () -> bool

    def will_save_change_to_created_at?: () -> bool

    def restore_created_at!: () -> void

    def clear_created_at_change: () -> void

    def updated_at: () -> ::ActiveSupport::TimeWithZone

    def updated_at=: (::ActiveSupport::TimeWithZone) -> ::ActiveSupport::TimeWithZone

    def updated_at?: () -> bool

    def updated_at_changed?: () -> bool

    def updated_at_change: () -> [ ::ActiveSupport::TimeWithZone?, ::ActiveSupport::TimeWithZone? ]

    def updated_at_will_change!: () -> void

    def updated_at_was: () -> ::ActiveSupport::TimeWithZone?

    def updated_at_previously_changed?: () -> bool

    def updated_at_previous_change: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def updated_at_previously_was: () -> ::ActiveSupport::TimeWithZone?

    def updated_at_before_last_save: () -> ::ActiveSupport::TimeWithZone?

    def updated_at_change_to_be_saved: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def updated_at_in_database: () -> ::ActiveSupport::TimeWithZone?

    def saved_change_to_updated_at: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def saved_change_to_updated_at?: () -> bool

    def will_save_change_to_updated_at?: () -> bool

    def restore_updated_at!: () -> void

    def clear_updated_at_change: () -> void
  end
  include GeneratedAttributeMethods
  def sessions: () -> ::Session::ActiveRecord_Associations_CollectionProxy
  def sessions=: (::Session::ActiveRecord_Associations_CollectionProxy | ::Array[::Session]) -> (::Session::ActiveRecord_Associations_CollectionProxy | ::Array[::Session])
  def session_ids: () -> ::Array[::Integer]
  def session_ids=: (::Array[::Integer]) -> ::Array[::Integer]

  module ActiveModel_SecurePassword_InstanceMethodsOnActivation_password
    attr_reader password: String?

    def password=: (String) -> String

    def password_confirmation=: (String) -> String

    def authenticate_password: (String) -> (::User | false)

    alias authenticate authenticate_password
  end
  include ActiveModel_SecurePassword_InstanceMethodsOnActivation_password

  module GeneratedRelationMethods
  end

  class ActiveRecord_Relation < ::ActiveRecord::Relation
    include ::User::GeneratedRelationMethods
    include ::_ActiveRecord_Relation[::User, ::String]
    include ::Enumerable[::User]
  end

  class ActiveRecord_Associations_CollectionProxy < ::ActiveRecord::Associations::CollectionProxy
    include ::User::GeneratedRelationMethods
    include ::_ActiveRecord_Relation[::User, ::String]
  end
end
